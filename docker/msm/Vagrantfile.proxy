# -*- mode: ruby -*-
# vi: set ft=ruby :

ENV['VAGRANT_DEFAULT_PROVIDER'] = 'docker'

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

    # configure the proxies using https://github.com/tmatilai/vagrant-proxyconf
    if Vagrant.has_plugin?("vagrant-proxyconf")
      config.proxy.http     = "http://proxy:3128/"
      config.proxy.https    = "http://proxy:3128/"
      config.proxy.no_proxy = "localhost,127.0.0.1"
    end

   #config.ssh.username = "dev-ops"
   config.ssh.forward_agent = true
   #config.ssh.pty = true

  # within this host VM we will be running dockers 
  config.vm.provision "docker"

  # The following line terminates all ssh connections. Therefore
  # Vagrant will be forced to reconnect.
  config.vm.provision "shell", inline:
    "ps aux | grep 'sshd:' | awk '{print $2}' | xargs kill"
 
  config.vm.define "dockerhost"
  config.vm.box = "centos65-x86_64-20140116"

  config.vm.provider :virtualbox do |vb|

      vb.gui = true
      # this is a dockerhost
      vb.name = "dockerhost"

      # This setting gives the VM 1024MB of RAM instead of the default 384.
      vb.customize ["modifyvm", :id, "--memory", [ENV['TRUSTRAP_VM_MEM'].to_i, 4096].max]
 
      # Who has a single core cpu these days anyways?
      cpu_count = 2

      # Determine the available cores in host system.
      if RUBY_PLATFORM =~ /linux/
        cpu_count = `nproc`.to_i
      elsif RUBY_PLATFORM =~ /darwin/
        cpu_count = `sysctl -n hw.ncpu`.to_i
      end

      # Assign additional cores to the guest OS.
      vb.customize ["modifyvm", :id, "--cpus", cpu_count]
      vb.customize ["modifyvm", :id, "--ioapic", "on"]
  end
 
end
